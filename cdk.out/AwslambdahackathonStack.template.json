{
 "Resources": {
  "ItemsTable5AAC2C46": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "itemId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "version",
      "AttributeType": "N"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "itemId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "version",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ItemsTable/Resource"
   }
  },
  "HelloFnServiceRoleDA97FE56": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/ServiceRole/Resource"
   }
  },
  "HelloFnServiceRoleDefaultPolicy23D39CE4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemsTable5AAC2C46",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "HelloFnServiceRoleDefaultPolicy23D39CE4",
    "Roles": [
     {
      "Ref": "HelloFnServiceRoleDA97FE56"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "HelloFn7942DF23": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fd87bef2be7cbf9db1bdb133ddc9c804d76483cecf1ddc80eedd6e3b9b48cb5f.zip"
    },
    "Environment": {
     "Variables": {
      "ITEMS_TABLE_NAME": {
       "Ref": "ItemsTable5AAC2C46"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "HelloFnServiceRoleDA97FE56",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "HelloFnServiceRoleDefaultPolicy23D39CE4",
    "HelloFnServiceRoleDA97FE56"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/Resource",
    "aws:asset:path": "asset.fd87bef2be7cbf9db1bdb133ddc9c804d76483cecf1ddc80eedd6e3b9b48cb5f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "HelloFnLogGroup1712C682": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "HelloFn7942DF23"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/LogGroup/Resource"
   }
  },
  "GeneratorFnServiceRole438F20C3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/ServiceRole/Resource"
   }
  },
  "GeneratorFnServiceRoleDefaultPolicy198AF8C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemsTable5AAC2C46",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GeneratorFnServiceRoleDefaultPolicy198AF8C0",
    "Roles": [
     {
      "Ref": "GeneratorFnServiceRole438F20C3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GeneratorFnB962270F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bf91c5a8a757a4bcfda40706fdfbe93b9c13a51fa1918f731cbf3f175f52c9bb.zip"
    },
    "Environment": {
     "Variables": {
      "ITEMS_TABLE_NAME": {
       "Ref": "ItemsTable5AAC2C46"
      },
      "BEDROCK_MODEL_ID": "anthropic.claude-3-sonnet-20240229-v1:0"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "GeneratorFnServiceRole438F20C3",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GeneratorFnServiceRoleDefaultPolicy198AF8C0",
    "GeneratorFnServiceRole438F20C3"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/Resource",
    "aws:asset:path": "asset.bf91c5a8a757a4bcfda40706fdfbe93b9c13a51fa1918f731cbf3f175f52c9bb",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GeneratorFnLogGroup09B49EA4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GeneratorFnB962270F"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/LogGroup/Resource"
   }
  },
  "HelloApi3F989F66": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "HelloApi"
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Resource"
   }
  },
  "HelloApiDeployment95582808a8188c65a2f643a1730e28d8bcc9adf8": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "DependsOn": [
    "HelloApigeneratePOST801D8CAB",
    "HelloApigenerate2AEDF5B2",
    "HelloApiGETCD7CC03D"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Deployment/Resource"
   }
  },
  "HelloApiDeploymentStageprodE85054A7": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "HelloApiDeployment95582808a8188c65a2f643a1730e28d8bcc9adf8"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/DeploymentStage.prod/Resource"
   }
  },
  "HelloApiGETApiPermissionAwslambdahackathonStackHelloApi32B1FB07GET11D65144": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloFn7942DF23",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/GET/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.GET.."
   }
  },
  "HelloApiGETApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07GET563C3D0D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloFn7942DF23",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/GET/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.GET.."
   }
  },
  "HelloApiGETCD7CC03D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "HelloFn7942DF23",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/GET/Resource"
   }
  },
  "HelloApigenerate2AEDF5B2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "PathPart": "generate",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/Resource"
   }
  },
  "HelloApigeneratePOSTApiPermissionAwslambdahackathonStackHelloApi32B1FB07POSTgenerate82E9D454": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GeneratorFnB962270F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/POST/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/POST/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.POST..generate"
   }
  },
  "HelloApigeneratePOSTApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07POSTgenerate79532919": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GeneratorFnB962270F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/POST/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/POST/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.POST..generate"
   }
  },
  "HelloApigeneratePOST801D8CAB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GeneratorFnB962270F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "HelloApigenerate2AEDF5B2"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/91VXW/bIBT9LeWxoixtn5a3tOumam2XJdnDZEXRDdw6tBgQ4FYe8n+fwHbSrOvUaX3agwWc+3UOF/AJOxmN2PEBPPojLu6PlFyzOA/A7yk8+lUUjYbKiDWLC1grLCKx4IIM0ujP2JBxJBoqJGNySCgJjU3TOWkp8caFFz1uksdaKiV1eW1EgqaT76vpxWw1u/j67WK+IJQ4rMwDqKlRkjdkTAT64ExD2iU9v9WZTksVVGsBK20E3nl2k4ePteaJYBEJ6uCaobas0NShX6F+kM7oCvWAuFonl37FO1ppugEtFLq8amls6d/k/dV7v8p+bIWVcc1c/sAXSf6R1pvWapdUQsXizOS2g/d1heIsd9Q6qbm0oCacm3pLrvNJAZPcgJ4aqUBDiSJ3UqIn4yLuYc3E9b7LJAGEWJjpUGLofxF7awjAN5daSY1bGzkkrzD+BxJezptvRSJOOzjFbNMtTLI8q/IcFmIeIGA6BX4g/GaJfg9n4h3nlvrTFXiPwbNJGqg/ZWc1v8dwBh6LZX/fWTy/1cM1z+HoKum9NLqlypSexStTfnKmtkUkqp/eDO9QYvIczDyGsJaClSUEfISGxRn6MLEyq8vb3K3pB7TKNElMEdP7xJ2021NDCVg53EQMIPXO3W955I5emVJyUJdib6dej2dSu+x0HqDETGmAnkjMRjpDb2rHMe9r1nWNYWNEEYnrTcM7E4LtbD0gdcDSwROhJqveifrHDJlmF7Dl2f15dg+hhbCZgnsqbHBt211U9u2+Jc1HKsmXukwBX+pg69DS9Pdgd/7dw8mIHb9no4M7L+VR/3qyWTf+BOCPan8qBwAA"
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "HelloApiEndpoint91438085": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "HelloApi3F989F66"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "HelloApiDeploymentStageprodE85054A7"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}