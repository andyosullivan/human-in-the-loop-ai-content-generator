{
 "Resources": {
  "ItemsTable5AAC2C46": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "itemId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "version",
      "AttributeType": "N"
     },
     {
      "AttributeName": "status",
      "AttributeType": "S"
     },
     {
      "AttributeName": "createdAt",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "StatusIndex",
      "KeySchema": [
       {
        "AttributeName": "status",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "createdAt",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "itemId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "version",
      "KeyType": "RANGE"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ItemsTable/Resource"
   }
  },
  "ListPendingFnServiceRoleA11542B2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ListPendingFn/ServiceRole/Resource"
   }
  },
  "ListPendingFnServiceRoleDefaultPolicy99A1905C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemsTable5AAC2C46",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ItemsTable5AAC2C46",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListPendingFnServiceRoleDefaultPolicy99A1905C",
    "Roles": [
     {
      "Ref": "ListPendingFnServiceRoleA11542B2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ListPendingFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListPendingFnC1B12507": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "cfefaf258f6dbffaa7abec03fee73b9e3834daaaa92a8a4d2d0510c116f73e07.zip"
    },
    "Environment": {
     "Variables": {
      "ITEMS_TABLE_NAME": {
       "Ref": "ItemsTable5AAC2C46"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ListPendingFnServiceRoleA11542B2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ListPendingFnServiceRoleDefaultPolicy99A1905C",
    "ListPendingFnServiceRoleA11542B2"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ListPendingFn/Resource",
    "aws:asset:path": "asset.cfefaf258f6dbffaa7abec03fee73b9e3834daaaa92a8a4d2d0510c116f73e07",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListPendingFnLogGroup3A5A6CB6": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListPendingFnC1B12507"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ListPendingFn/LogGroup/Resource"
   }
  },
  "HelloFnServiceRoleDA97FE56": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/ServiceRole/Resource"
   }
  },
  "HelloFnServiceRoleDefaultPolicy23D39CE4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemsTable5AAC2C46",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ItemsTable5AAC2C46",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "HelloFnServiceRoleDefaultPolicy23D39CE4",
    "Roles": [
     {
      "Ref": "HelloFnServiceRoleDA97FE56"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "HelloFn7942DF23": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "fd87bef2be7cbf9db1bdb133ddc9c804d76483cecf1ddc80eedd6e3b9b48cb5f.zip"
    },
    "Environment": {
     "Variables": {
      "ITEMS_TABLE_NAME": {
       "Ref": "ItemsTable5AAC2C46"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "HelloFnServiceRoleDA97FE56",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 10
   },
   "DependsOn": [
    "HelloFnServiceRoleDefaultPolicy23D39CE4",
    "HelloFnServiceRoleDA97FE56"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/Resource",
    "aws:asset:path": "asset.fd87bef2be7cbf9db1bdb133ddc9c804d76483cecf1ddc80eedd6e3b9b48cb5f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "HelloFnLogGroup1712C682": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "HelloFn7942DF23"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloFn/LogGroup/Resource"
   }
  },
  "GeneratorFnServiceRole438F20C3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/ServiceRole/Resource"
   }
  },
  "GeneratorFnServiceRoleDefaultPolicy198AF8C0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemsTable5AAC2C46",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ItemsTable5AAC2C46",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:bedrock:",
          {
           "Ref": "AWS::Region"
          },
          "::foundation-model/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GeneratorFnServiceRoleDefaultPolicy198AF8C0",
    "Roles": [
     {
      "Ref": "GeneratorFnServiceRole438F20C3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GeneratorFnB962270F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "73cf82567ac8ad6beee9c340af0f91aba563bf51eb521ddc14c4ed04dbd2e27e.zip"
    },
    "Environment": {
     "Variables": {
      "ITEMS_TABLE_NAME": {
       "Ref": "ItemsTable5AAC2C46"
      },
      "BEDROCK_MODEL_ID": "anthropic.claude-3-sonnet-20240229-v1:0"
     }
    },
    "Handler": "index.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "GeneratorFnServiceRole438F20C3",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GeneratorFnServiceRoleDefaultPolicy198AF8C0",
    "GeneratorFnServiceRole438F20C3"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/Resource",
    "aws:asset:path": "asset.73cf82567ac8ad6beee9c340af0f91aba563bf51eb521ddc14c4ed04dbd2e27e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GeneratorFnLogGroup09B49EA4": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GeneratorFnB962270F"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorFn/LogGroup/Resource"
   }
  },
  "GeneratorStateMachineRole1FA01F05": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "states.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorStateMachine/Role/Resource"
   }
  },
  "GeneratorStateMachineRoleDefaultPolicy4E99A3DF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeneratorFnB962270F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GeneratorFnB962270F",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GeneratorStateMachineRoleDefaultPolicy4E99A3DF",
    "Roles": [
     {
      "Ref": "GeneratorStateMachineRole1FA01F05"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorStateMachine/Role/DefaultPolicy/Resource"
   }
  },
  "GeneratorStateMachine480D5C39": {
   "Type": "AWS::StepFunctions::StateMachine",
   "Properties": {
    "DefinitionString": {
     "Fn::Join": [
      "",
      [
       "{\"StartAt\":\"ForEach\",\"States\":{\"ForEach\":{\"Type\":\"Map\",\"End\":true,\"ItemsPath\":\"$.items\",\"Iterator\":{\"StartAt\":\"InvokeGenerator\",\"States\":{\"InvokeGenerator\":{\"End\":true,\"Retry\":[{\"ErrorEquals\":[\"Lambda.ClientExecutionTimeoutException\",\"Lambda.ServiceException\",\"Lambda.AWSLambdaException\",\"Lambda.SdkClientException\"],\"IntervalSeconds\":2,\"MaxAttempts\":6,\"BackoffRate\":2}],\"Type\":\"Task\",\"ResultPath\":\"$.generatorResult\",\"Resource\":\"arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":states:::lambda:invoke\",\"Parameters\":{\"FunctionName\":\"",
       {
        "Fn::GetAtt": [
         "GeneratorFnB962270F",
         "Arn"
        ]
       },
       "\",\"Payload\":{\"type.$\":\"$.type\",\"lang.$\":\"$.lang\"}}}}}}},\"TimeoutSeconds\":900}"
      ]
     ]
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "GeneratorStateMachineRole1FA01F05",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "GeneratorStateMachineRoleDefaultPolicy4E99A3DF",
    "GeneratorStateMachineRole1FA01F05"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/GeneratorStateMachine/Resource"
   }
  },
  "ReviewerFnServiceRole87E53130": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ReviewerFn/ServiceRole/Resource"
   }
  },
  "ReviewerFnServiceRoleDefaultPolicy8A45EF6C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ItemsTable5AAC2C46",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ItemsTable5AAC2C46",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ReviewerFnServiceRoleDefaultPolicy8A45EF6C",
    "Roles": [
     {
      "Ref": "ReviewerFnServiceRole87E53130"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ReviewerFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ReviewerFnDACAA553": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bbddf8a70319ab73d4e501ae845d6954532ceafc54c8c214e5107c5c2bc506b9.zip"
    },
    "Environment": {
     "Variables": {
      "ITEMS_TABLE_NAME": {
       "Ref": "ItemsTable5AAC2C46"
      }
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "ReviewerFnServiceRole87E53130",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 10
   },
   "DependsOn": [
    "ReviewerFnServiceRoleDefaultPolicy8A45EF6C",
    "ReviewerFnServiceRole87E53130"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ReviewerFn/Resource",
    "aws:asset:path": "asset.bbddf8a70319ab73d4e501ae845d6954532ceafc54c8c214e5107c5c2bc506b9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ReviewerFnLogGroup95CFDB2C": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ReviewerFnDACAA553"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/ReviewerFn/LogGroup/Resource"
   }
  },
  "RequestItemsFnServiceRole1933F096": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/RequestItemsFn/ServiceRole/Resource"
   }
  },
  "RequestItemsFnServiceRoleDefaultPolicyE5D45D4B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "states:StartExecution",
       "Effect": "Allow",
       "Resource": {
        "Ref": "GeneratorStateMachine480D5C39"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RequestItemsFnServiceRoleDefaultPolicyE5D45D4B",
    "Roles": [
     {
      "Ref": "RequestItemsFnServiceRole1933F096"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/RequestItemsFn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RequestItemsFn6C3B7DCB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "37e3d4620b6130073e762922496caf4c36e577a689adcef3e0f116e81cf251c7.zip"
    },
    "Environment": {
     "Variables": {
      "STATE_MACHINE_ARN": {
       "Ref": "GeneratorStateMachine480D5C39"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "RequestItemsFnServiceRole1933F096",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "RequestItemsFnServiceRoleDefaultPolicyE5D45D4B",
    "RequestItemsFnServiceRole1933F096"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/RequestItemsFn/Resource",
    "aws:asset:path": "asset.37e3d4620b6130073e762922496caf4c36e577a689adcef3e0f116e81cf251c7",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "RequestItemsFnLogGroup8DEF5C16": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RequestItemsFn6C3B7DCB"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/RequestItemsFn/LogGroup/Resource"
   }
  },
  "HelloApi3F989F66": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "HelloApi"
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Resource"
   }
  },
  "HelloApiDeployment955828089954e173762d8ae9e89313162405ed85": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "DependsOn": [
    "HelloApigenerateOPTIONS063298EC",
    "HelloApigeneratePOST801D8CAB",
    "HelloApigenerate2AEDF5B2",
    "HelloApiGETCD7CC03D",
    "HelloApipendingGETE6E27CF3",
    "HelloApipendingOPTIONS8277A1D6",
    "HelloApipending635CE4DF",
    "HelloApirequestitemsOPTIONS94192967",
    "HelloApirequestitemsPOST1F3DB11A",
    "HelloApirequestitems95AA0F21",
    "HelloApireviewOPTIONS91DB669B",
    "HelloApireviewPOSTDF0875F9",
    "HelloApireviewAAB22E9E"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Deployment/Resource"
   }
  },
  "HelloApiDeploymentStageprodE85054A7": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "HelloApiDeployment955828089954e173762d8ae9e89313162405ed85"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/DeploymentStage.prod/Resource"
   }
  },
  "HelloApiGETApiPermissionAwslambdahackathonStackHelloApi32B1FB07GET11D65144": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloFn7942DF23",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/GET/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.GET.."
   }
  },
  "HelloApiGETApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07GET563C3D0D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HelloFn7942DF23",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/GET/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.GET.."
   }
  },
  "HelloApiGETCD7CC03D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "HelloFn7942DF23",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/GET/Resource"
   }
  },
  "HelloApigenerate2AEDF5B2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "PathPart": "generate",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/Resource"
   }
  },
  "HelloApigeneratePOSTApiPermissionAwslambdahackathonStackHelloApi32B1FB07POSTgenerate82E9D454": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GeneratorFnB962270F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/POST/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/POST/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.POST..generate"
   }
  },
  "HelloApigeneratePOSTApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07POSTgenerate79532919": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GeneratorFnB962270F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/POST/generate"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/POST/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.POST..generate"
   }
  },
  "HelloApigeneratePOST801D8CAB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GeneratorFnB962270F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "HelloApigenerate2AEDF5B2"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/POST/Resource"
   }
  },
  "HelloApigenerateOPTIONS063298EC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "HelloApigenerate2AEDF5B2"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/generate/OPTIONS/Resource"
   }
  },
  "HelloApireviewAAB22E9E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "PathPart": "review",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/review/Resource"
   }
  },
  "HelloApireviewPOSTApiPermissionAwslambdahackathonStackHelloApi32B1FB07POSTreview7676DAF0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ReviewerFnDACAA553",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/POST/review"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/review/POST/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.POST..review"
   }
  },
  "HelloApireviewPOSTApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07POSTreviewF8ECB4AA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ReviewerFnDACAA553",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/POST/review"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/review/POST/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.POST..review"
   }
  },
  "HelloApireviewPOSTDF0875F9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ReviewerFnDACAA553",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "HelloApireviewAAB22E9E"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/review/POST/Resource"
   }
  },
  "HelloApireviewOPTIONS91DB669B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "HelloApireviewAAB22E9E"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/review/OPTIONS/Resource"
   }
  },
  "HelloApipending635CE4DF": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "PathPart": "pending",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/pending/Resource"
   }
  },
  "HelloApipendingGETApiPermissionAwslambdahackathonStackHelloApi32B1FB07GETpendingD3CC0767": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPendingFnC1B12507",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/GET/pending"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/pending/GET/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.GET..pending"
   }
  },
  "HelloApipendingGETApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07GETpending033CEC80": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPendingFnC1B12507",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/GET/pending"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/pending/GET/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.GET..pending"
   }
  },
  "HelloApipendingGETE6E27CF3": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListPendingFnC1B12507",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "HelloApipending635CE4DF"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/pending/GET/Resource"
   }
  },
  "HelloApipendingOPTIONS8277A1D6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "HelloApipending635CE4DF"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/pending/OPTIONS/Resource"
   }
  },
  "HelloApirequestitems95AA0F21": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "HelloApi3F989F66",
      "RootResourceId"
     ]
    },
    "PathPart": "request-items",
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/request-items/Resource"
   }
  },
  "HelloApirequestitemsPOSTApiPermissionAwslambdahackathonStackHelloApi32B1FB07POSTrequestitems269582AF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RequestItemsFn6C3B7DCB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/",
       {
        "Ref": "HelloApiDeploymentStageprodE85054A7"
       },
       "/POST/request-items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/request-items/POST/ApiPermission.AwslambdahackathonStackHelloApi32B1FB07.POST..request-items"
   }
  },
  "HelloApirequestitemsPOSTApiPermissionTestAwslambdahackathonStackHelloApi32B1FB07POSTrequestitemsDC9C1CCF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RequestItemsFn6C3B7DCB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "HelloApi3F989F66"
       },
       "/test-invoke-stage/POST/request-items"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/request-items/POST/ApiPermission.Test.AwslambdahackathonStackHelloApi32B1FB07.POST..request-items"
   }
  },
  "HelloApirequestitemsPOST1F3DB11A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RequestItemsFn6C3B7DCB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "HelloApirequestitems95AA0F21"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/request-items/POST/Resource"
   }
  },
  "HelloApirequestitemsOPTIONS94192967": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'"
       },
       "StatusCode": "200"
      }
     ],
     "PassthroughBehavior": "NEVER",
     "RequestTemplates": {
      "application/json": "{\"statusCode\": 200}"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Origin": true
      },
      "StatusCode": "200"
     }
    ],
    "ResourceId": {
     "Ref": "HelloApirequestitems95AA0F21"
    },
    "RestApiId": {
     "Ref": "HelloApi3F989F66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/HelloApi/Default/request-items/OPTIONS/Resource"
   }
  },
  "SiteBucket397A1860": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": false,
     "BlockPublicPolicy": false,
     "IgnorePublicAcls": false,
     "RestrictPublicBuckets": false
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:7d9446f0",
      "Value": "true"
     }
    ],
    "WebsiteConfiguration": {
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/SiteBucket/Resource"
   }
  },
  "SiteBucketPolicy3AC1D0F8": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "SiteBucket397A1860"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "SiteBucket397A1860",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SiteBucket397A1860",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SiteBucket397A1860",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "SiteOAI1F7E9870",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "SiteBucket397A1860",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SiteBucket397A1860",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/SiteBucket/Policy/Resource"
   }
  },
  "SiteBucketAutoDeleteObjectsCustomResource9585E968": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "SiteBucket397A1860"
    }
   },
   "DependsOn": [
    "SiteBucketPolicy3AC1D0F8"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/SiteBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs22.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "SiteBucket397A1860"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "SiteOAI1F7E9870": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/SiteOAI/Resource"
   }
  },
  "SiteDistribution3FF9535D": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CustomErrorResponses": [
      {
       "ErrorCachingMinTTL": 300,
       "ErrorCode": 403,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      },
      {
       "ErrorCachingMinTTL": 300,
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
      "Compress": true,
      "TargetOriginId": "AwslambdahackathonStackSiteDistributionOrigin1208E3582",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "CustomOriginConfig": {
        "OriginProtocolPolicy": "http-only",
        "OriginSSLProtocols": [
         "TLSv1.2"
        ]
       },
       "DomainName": {
        "Fn::Select": [
         2,
         {
          "Fn::Split": [
           "/",
           {
            "Fn::GetAtt": [
             "SiteBucket397A1860",
             "WebsiteURL"
            ]
           }
          ]
         }
        ]
       },
       "Id": "AwslambdahackathonStackSiteDistributionOrigin1208E3582"
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/SiteDistribution/Resource"
   }
  },
  "DeployWebsiteAwsCliLayer17DBC421": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b8ab94266984268614c3fb2824a1c3a55395746c48b28c003b08bc1d08688f3e.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/DeployWebsite/AwsCliLayer/Resource",
    "aws:asset:path": "asset.b8ab94266984268614c3fb2824a1c3a55395746c48b28c003b08bc1d08688f3e.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "DeployWebsiteCustomResourceD116527B": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "dd3b5b92cb6e4d7f1e7a2f27f8068120ce5732d748be86bc6b2c2d38cbc855d4.zip"
    ],
    "DestinationBucketName": {
     "Ref": "SiteBucket397A1860"
    },
    "Prune": true,
    "DistributionId": {
     "Ref": "SiteDistribution3FF9535D"
    },
    "DistributionPaths": [
     "/*"
    ],
    "OutputObjectKeys": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/DeployWebsite/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SiteBucket397A1860",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SiteBucket397A1860",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "DeployWebsiteAwsCliLayer17DBC421"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.9a1fcb4a7ecba81ad70e9d3fb241f6794497da945dae5f25924e4dd002b65f2d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CLogGroup817B64E9": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536"
       }
      ]
     ]
    },
    "RetentionInDays": 731
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/LogGroup/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/+1Z3W/bNhD/W8rHgtHS7ml5c5y0DZa0np0NGAzDOIlnmwlFCuTJnib4fx9IUZacr6ZDuqWAHwKJd6f7JO9+jN8n74/fJcdvYOOOMnF7pGSa1BOC7JbDxs1rUWnIjUiT+hpShdOaFWBJkjT6V6zYSc005MhO2FvGGVWFf52wLWfOWHpU4rOXSKVSUi+vjPCk0eDP+eh8PB+f//b7+eSacWYxN2tQI6NkVrETJtCRNRXb8pqBEB+VSUFNMDNagK0utMC/2Mm0ZtK/fe5sPsvh7Ww748OFDlFuuYI8FTDXRuCNSz6Hx4dSZ17NtGaoyVZRhy01yU6jzNGUFFc55sZWE/l3y0a9ltboHHUrkjXh+9cVaKHQhtWW1z7OFzN0V9n+5/fd2jf2fCef1vuiIX3Fre+avh+z6C9X5nuWZlxCntRjE3oEOFfmKE7DeSus1JksQA2yzJQ7042M/2AQjlU0xXLQsEQRjr1EF450n1YNbJSdxU5wbUatibZZTOvIJYJsdaGV1LjjsbfsGcxDCK8hhKf1/usAD2k/hPD6Q3ha7+PcgGR8WLwhe407Y9fGc+75cJ8sxISA0Pd415p9fYp+GEdfn6JvIoc91WynLXc/z2twDsklA//gAgtlKi+fnJbZLdLZjuClk7qhnoLD6Yw3i2nNNpg6SRiw+5nJyh4yKcpUyWyMIAZZhs6xE7IlcpYqk92OArNlNEjmkdsCZ1CSOUOFhF/SG8woqoqBDo114zIkq2aglNmguEJaGeEjZx/Pr9mMt4wvVi6lbk1G4icEgda1DSEkqokwBhoPYc3SsGwB006szWpz6Ujq4UK3d42QdLS5dC6uLqFC+wfasJ5IvVRIRvfuJmUpRXRQeVkXt8FD8K+xOCptYdzDGNOGffQI3CxWmKMFNSFjYYk91rrIurdJmWqkNmsLqdBVjjBvnTDLj9aUxdMgdB+rxuJdIYEAgiZE7ss6e5gVDsKM9/L01eT8SIk473vfBdwwL/uR+hOuzNIl9WU053MRX3e3Zv/lf0MM56B1ZcsdYbGIRXJzAnfrksuwSy/02tzivkBSX0HBQ6+6gmwltb98CFxILXfzfL+Qu8npG+T9odlXteVQyCUQbqBK6jE6GhSy2S1+vDZr3jW6YNplVhY921DIXYMikLoTd/v+XJqlzEBdiDsT/kB/mB6K0GXTb4JlU/2W1NtfgcnH6ExpMwxTKNSxafTTmtnIas8bUdHwIkFqwqWFXmFNqHJXxP9VQ83yIDlGVxjtImR1BFS6YddGbGSPwEKO1BtaXdPsaflWJYcsHLJwyALdxYKNil33af6F3gO6QKsR2G48fSduO7WCE1ueKVOKhTWakrqBtQ2cvhCoSVK1G3RDL/jBCz4kxs+kIyvTMqIqgQsoFY2NoQZtR18i/RRXsJbG+gKZoK5FRxI3aEfWkMlMh+ItCmkxoyMyR778zl/P0Vpj9wvreZNQlzs1+fQYYwRLHAGtWoxAapfEl1PWjqlejrbbbidEnPbY34yHy5UfXlIvvaIvJRUl8WHpyOR31ewV+I7MyJq1FGj96Gt/3AgAeA4blymZDDZuqGRAis3Y9T99JDfup/X74+TdL8nxmxsn5VGEnsm4ef4DnrQQ3z4aAAA="
   },
   "Metadata": {
    "aws:cdk:path": "AwslambdahackathonStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "HelloApiEndpoint91438085": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "HelloApi3F989F66"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "HelloApiDeploymentStageprodE85054A7"
      },
      "/"
     ]
    ]
   }
  },
  "SiteURL": {
   "Description": "The CloudFront URL of the React review UI",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "SiteDistribution3FF9535D",
        "DomainName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}